{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setValue","Row","Col","Form","onSubmit","e","preventDefault","trim","length","cats","Group","controlId","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","sm","md","lg","Card","Img","variant","src","Body","Title","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Alert","GifExpertApp","categories","Container","el","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd645c61.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col, Form, FormControl, InputGroup, Row } from 'react-bootstrap';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setValue] = useState('');\r\n\r\n    const changeInput = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Form onSubmit={submit}>\r\n                    <Form.Group controlId=\"Buscar\">\r\n                        <InputGroup className=\"my-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"buscar\"><i className=\"fa fa-search\"></i></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                                placeholder=\"Buscar...\"\r\n                                aria-label=\"Buscar...\"\r\n                                aria-describedby=\"buscar\"\r\n                                type=\"text\"\r\n                                value={inputValue}\r\n                                onChange={changeInput}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Form>\r\n                <hr/>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async(category) => {\r\n    const apiKey = 'wMh3KqE6Uuvl0ZRIzHKMxLN89LYBiJyr';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&limit=10&q=${ encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}\r\n","import React from 'react';\r\nimport { Card, Col } from 'react-bootstrap';\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <Col className=\"animate__animated animate__fadeIn\" sm={12} md={6} lg={4}>\r\n            <Card className=\"my-2 shadow-sm\">\r\n                <Card.Img variant=\"top\" src={url} />\r\n            <Card.Body>\r\n                <Card.Title>{title}</Card.Title>\r\n            </Card.Body>\r\n            </Card>\r\n        {/* <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div> */}\r\n        </Col>\r\n        \r\n    )\r\n}","import React from 'react';\r\nimport { Col, Row, Alert } from 'react-bootstrap';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (        \r\n        <Row>\r\n            <Col sm={12}>\r\n                <h3 className=\"text-primary font-weight-bolder\">{category}</h3>                 \r\n            </Col>\r\n            {loading && \r\n                <Col sm={12}>\r\n                    <Alert variant=\"primary\">\r\n                        Cargando...\r\n                    </Alert>\r\n                </Col>\r\n            }\r\n            <Col sm={12}>\r\n                <Row>\r\n                    {\r\n                        images.map( img => {\r\n                            return <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        \r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState(\r\n                    {\r\n                        data: imgs,\r\n                        loading: false\r\n                    }\r\n                )\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <h2 className=\"text-secondary mt-4\">GifExpertApp</h2>\r\n                    </Col>\r\n                </Row>\r\n                <AddCategory setCategories={setCategories} />\r\n                {\r\n                    categories.map((el, index) => {\r\n                        return (\r\n                            <GifGrid\r\n                                key={index}\r\n                                category={el}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}